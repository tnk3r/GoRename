#!/bin/bash

#	                                     _                             _   _____           
#   	        _ __ ___ _ __ ___   ___ | |_ ___         ___ _   _ ___| |_|___ /_ __ ___  
#       	   | '__/ _ \ '_ ` _ \ / _ \| __/ _ \      / __| | | / __| __| |_ \| '_ ` _ \ 
#      		   | | |  __/ | | | | | (_) | ||  __/   _  \__ \ |_| \__ \ |_ ___) | | | | | |
#       	   |_|  \___|_| |_| |_|\___/ \__\___|  (_) |___/\__, |___/\__|____/|_| |_| |_|  
#                                                           |___/           	                                                                  

					

						#	// GO PRO RENAME SCRIPT // 
						
						# MAC OSX ONLY WITH CocoaDialog.app
						
						# BETA VERSION WILL SUPPORT PYTHON QTGUI
						
						
						
						
								
						#	v .6 alpha from c9.io


						#	THIS SCRIPT ASSUMES THE NORMAL DIRECTORY STRUCTURE OF GO PRO FILES
						#	YOU MAY SELECT A 'PARENT' FOLDER FOR RENAME OR A 'NO NAME' MEDIA CARD
						#	IF YOU HAVE ALREADY RENAMED YOUR MEDIA I DO NOT SUGGEST RUNNING THIS SCRIPT
						# 	TRY IT OUT TO SEE IF IT FITS IN YOUR WORKFLOW
						#	FOR BEST RESULTS USE ON MEDIA DIRECTLY BEFORE COPYING TO DISK
						#   FOLDERS WORK WELL, DEPENDING ON YOUR DIRECTORY STRUCTURE LAYOUT
						#	PLEASE TRY NOT TO USE SPACES, THEY WILL WORK. BUT HIGHLY DISCOURAGED
						#	KEEP IN MIND ANY FILE NAMES WITH SPACES IN THEM ARE NOT PROFESSIONAL
						


						#	INSTALLATION:
						#	copy the files inside the supplied .DMG into your /Applications Folder 
						#	Then you can double click on the go-rename file to open the Dialog 
						#	You must install the supplied Cocoa DIALOG .app (DO NOT TRY TO RUN IT DIRECTLY)
						#	YOU CAN EMAIL ME AT remote.syst3m@gmail.com FOR QUESTIONS





						#	USE AT YOUR OWN RISK
						#	YOU HAVE BEEN WARNED		
								
						#			&&
								
						#   Homie Don't Right Click!



#						UPDATES:  v .6
#
#						FIXED VARIOUS FOLDER CHECKING ISSUES. 
#						ADDED LOGGING OF RENAMED MEDIA
#						CHANGED ENUM FOR VOLUMES/MEDIA FOR SPECIAL CASES
#


# ===================================================================================================================




		# GET VARIABLES

today=$(date +%y%m%d)




		#GET THE REEL ID FOR RENAME

reelInput=$(/Applications/cocoaDialog.app/Contents/MacOS/cocoaDialog\
 inputbox --button1 "OK" --string-output\
 --title "Enter the Reel ID" --label "Example: A023 or B005, etc... ")




		#SET THE REEL ID INTO VARIABLE

reelID=$(echo "$reelInput" | sed -e '1,1d;')




		#ASK FULL DIRECTORY WHERE CARD EXISTS, STRING OUTPUT

CARD=$(/Applications/cocoaDialog.app/Contents/MacOS/cocoaDialog\
 fileselect --select-only-directories --label "Select GoPRO Media")


		#LOGIC IF RENAMING A NO NAME OR DOWNLOADED DIRECTORY

if [ $(dirname "$CARD") == /Volumes ]
	
	then
	
		/usr/sbin/diskutil rename "$CARD" "$reelID"_"$today"			
			
		CARD=/Volumes/"$reelID"_"$today"   
		
		CARDX=( "$CARD"/* )
		
		
		echo "${CARDX[0]}"
		
		CARD2X=( ${CARDX[0]}/* )
		
		echo "${CARD2X[0]}"
		
		dir1=$(basename "${CARDX[0]}")
		
		dir2=$(basename "${CARD2X[0]}")
	
			for file in $(ls "${CARD2X[0]}")

				do

					ext=${file##*.}													#get extension

					newName=$(echo ${file%.*} | sed -e 's/GOPR/'$reelID'_C/')       #strip GOPR

					echo "Rename: $file to "$newName"_"$today"."$ext""
					
					mv "$CARD"/"$dir1"/"$dir2"/$file "$CARD"/"$dir1"/"$dir2"/"$newName"_"$today"."$ext"		#rename all files

					
					
				done
				
				mv "$CARD"/MISC/* "$CARD"
				
				mv "$CARD"/"$dir1"/"$dir2"/* "$CARD"/"$dir1"
				
				mv "$CARD"/"$dir1" "$CARD"/"$reelID"_"$today"
				
				if [ -z $(ls "$CARD"/"$reelID"_"$today"/"$dir2") ]
					
					then
					
						rm -rf "$CARD"/"$reelID"_"$today"/"$dir2"
					
						rm -rf "$CARD"/MISC
				fi
				
	else 
		
		#LOGIC FOR SELECTING A FOLDER
		
		
		parent=$(dirname "$CARD")
	
		mv "$CARD" "$parent"/"$reelID"_"$today"
		
		CARD="$parent"/"$reelID"_"$today"
		
		
		
		# IF FOLDER WAS DOWNLOADED AND .MP4 IS IN 1ST DIRECTORY
		
		
		FOLDER=( "$CARD"/*.MP4 )
		
		if [ -e "${FOLDER[0]}" ]
		
			then 
				
				for file in $(ls "$CARD")

						do

							ext=${file##*.}

							newName=$(echo ${file%.*} | sed -e 's/GOPR/'$reelID'_C/')

							echo "Rename: $file to "$newName"_"$today"."$ext""

							mv "$CARD"/$file "$CARD"/"$newName"_"$today"."$ext"		

						done
			
			else
				
		
		
				# IF .MP4 IS IN FOLDER DIRECTLY AFTER DCIM ( JUST IN CASE )
		
		
				
				FOLDER0=( "$CARD"/* )
				
				if [ -e "${FOLDER0[0]}" ]
					
					then
							
						folder1="${FOLDER0[0]}"
						
						FOLDER1=( "$folder1"/*.MP4 )
						
					 
					
						if [ -e "${FOLDER1[0]}" ]
						
							then 
					
							
								for file in $(ls "$folder1")

									do

										ext=${file##*.}

										newName=$(echo ${file%.*} | sed -e 's/GOPR/'$reelID'_C/')
									
										echo "Rename: $file to "$newName"_"$today"."$ext""
									
										mv "$folder1"/$file "$folder1"/"$newName"_"$today"."$ext"		


								done
							
							
								
								mv "$folder1" "$CARD"/"$reelID"_"$today" 
								
								 
							else 
								
								
							
							# IF .MP4 IS IN DIRECTORY STRUCTURE /DCIM/100GOPRO/.MP4
								
							
							
								folder2=$(basename "$folder1"/*)
								
								FOLDER2=( "$folder1"/"$folder2"/*.MP4 )
								
							
							
								if [ -e "${FOLDER2[0]}" ]
									
									then 	
									
									mv "$folder1" "$CARD"/"$reelID"_"$today" 
									
											for file in $(ls "$CARD"/"$reelID"_"$today"/"$folder2")

												do

													ext=${file##*.}

													newName=$(echo ${file%.*} | sed -e 's/GOPR/'$reelID'_C/')
													
													echo "Rename: $file to "$newName"_"$today"."$ext""

													mv "$CARD"/"$reelID"_"$today"/"$folder2"/$file "$CARD"/"$reelID"_"$today"/"$newName"_"$today"."$ext"		
													
													
											done
											
											if [ -z $(ls "$CARD"/"$reelID"_"$today"/"$folder2") ]
												
												then
												
													rm -rf "$CARD"/"$reelID"_"$today"/"$folder2"	
							
												fi
								fi
							
							
							
						fi
												
	
	
				fi
					
	
			if [ -e "$CARD"/M* ]
						
	
				then 
						
	
					mv "$CARD"/M*/* "$CARD"
						
					rm -rf "$CARD"/MISC
				
		fi

				
	fi
	
		
fi





exit 0

